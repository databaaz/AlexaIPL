#!/bin/bash

REMOTE="$1"
URL="$2"
CLUSTERS=( hasura )

MIGRATION_DIR="migrations"
MICROSERVICES_DIR="microservices"
CONF_DIR="conf"
CLUSTERS_YAML="clusters.yaml"

# extract branch name
while read localref localhash foreignref foreignhash
do
    BRANCH=$(basename $localref)
done

# check if refs are being pushed
if [ -z ${BRANCH+x} ]; then
    # no refs are being pushed, don't do hasura push
    echo "No commits are being pushed. Skipping hasura push"
else
    # check if the current remote is in the clusters list
    if [[ ${CLUSTERS[*]} =~ $REMOTE ]]
    then
        # if remote is in clusters, check if migration folder is dirty
        GIT_MIGRATION_STATUS="$(git status $MIGRATION_DIR --porcelain)"
        GIT_MIGRATION_DIFF_INDEX="$(git diff-index -p HEAD -- $MIGRATION_DIR)"
        GIT_MIGRATION_DIRTY="$GIT_MIGRATION_STATUS$GIT_MIGRATION_DIFF_INDEX"

        if [ -n "$GIT_MIGRATION_DIRTY" ]; then
            # migration directory is dirty, exit
            echo -e "\e[31mYou have migrations in '$MIGRATION_DIR/' directory that are not yet committed. Commit them to push the changes\e[0m"
            echo -e "$(git status $MIGRATION_DIR)" 
            exit 1
        fi

        # if remote is in clusters, check if tree is dirty
        GIT_STATUS="$(git status $MICROSERVICES_DIR $CONF_DIR $CLUSTERS_YAML --porcelain)"
        GIT_DIFF_INDEX="$(git diff-index -p HEAD -- $MICROSERVICES_DIR $CONF_DIR $CLUSTERS_YAML)"
        GIT_DIRTY="$GIT_STATUS$GIT_DIFF_INDEX"

        if [ -n "$GIT_DIRTY" ]; then
            # directory is dirty, prompt for confirmation
            echo -e "$(git status $MICROSERVICES_DIR $CONF_DIR $CLUSTERS_YAML)" 
            read -p $'\e[33mThere are changes that have not been committed yet. The push might fail or changes may not be applied as expected. Continue? (y/n) \e[0m' -n 1 -r < /dev/tty
            echo
            if [[ $REPLY =~ ^[Yy]$ ]]
            then
                # yes, continue
                echo
            else
                # no, exit
                exit 1
            fi
        fi

        # migration directory is not dirty, all is well
        hasura push --branch "$BRANCH" --cluster "$REMOTE"
	      code=$(echo $?)
	      if [ $code -eq 2 ]; then
            git push --no-verify "$REMOTE" "$BRANCH"
        elif [ $code -eq 0 ]; then
            exit 0
        else
            exit 1
	      fi
    else
        # remote is not in clusters, skip hasura push
        echo "Remote is not a hasura cluster. Skipping hasura push"
    fi
fi
